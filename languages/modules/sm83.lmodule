LANGUAGE(sm83_asm)
#: Game Boy SM83 (Z80) assembly language

	DisplayName: Game Boy SM83 (Z80) asm

	REGISTER_STORAGE(0x00)
	{
		Size:	12 BYTES

		REGISTER(AF)
		{
			Mapping:	0x00
			Size:		16 BITS
			Purpose: 	GENERAL
		}
		REGISTER(A)
		{
			Mapping:	0x00
			Size:		8 BITS 
			Purpose:	GENERAL
		}

		REGISTER(BC)
		{
			Mapping:	0x10
			Size:		16 BITS
			Purpose: 	GENERAL
		}
		REGISTER(B)
		{
			Mapping:	0x10
			Size:		8 BITS 
			Purpose:	GENERAL
		}
		REGISTER(C)
		{
			Mapping:	0x18
			Size:		8 BITS 
			Purpose:	GENERAL
		}

		REGISTER(DE)
		{
			Mapping:	0x20
			Size:		16 BITS
			Purpose: 	GENERAL
		}
		REGISTER(D)
		{
			Mapping:	0x20
			Size:		8 BITS 
			Purpose:	GENERAL
		}
		REGISTER(E)
		{
			Mapping:	0x28
			Size:		8 BITS 
			Purpose:	GENERAL
		}

		REGISTER(HL)
		{
			Mapping:	0x30
			Size:		16 BITS
			Purpose: 	GENERAL
		}
		REGISTER(H)
		{
			Mapping:	0x30
			Size:		8 BITS 
			Purpose:	GENERAL
		}
		REGISTER(L)
		{
			Mapping:	0x38
			Size:		8 BITS 
			Purpose:	GENERAL
		}


		REGISTER(PC)
		{
			Mapping:	0x40
			Size:		16 BITS
			Purpose: 	PROGRAM_COUNTER
		}
		REGISTER(SP)
		{
			Mapping:	0x50
			Size:		16 BITS
			Purpose: 	STACK_POINTER
		}

		REGISTER(F)
		{
			Mapping:	0x08
			Size:		8 BITS
			Purpose:	FLAG
		}

		FLAG(ZF)
		{
			Mapping: 	0x0f
		}
		FLAG(NF)
		{
			Mapping: 	0x0e
		}
		FLAG(HF)
		{
			Mapping: 	0x0d
		}
		FLAG(CF)
		{
			Mapping: 	0x0c
		}
	}

	INSTRUCTION_SET	( REGULAR )
	{

	# 8-bit Loads:
MACRO:LOAD( _REG_, _OP_B_ )
=BEGIN
		"LD _REG_, %s": GROUP( _OP_B_, 8 )
		{
			Param[0]:	{	 B      C      D      E      H      L     *(HL)   A    }
			Repr[0]:	{	"B"    "C"    "D"    "E"    "H"    "L"    "(HL)" "A"   }
			Cycles:		{	 4      4      4      4      4      4      8      4    }

			Logic
			{
				REG_LOAD	_REG_, Param[0];
			}
		}
=END

MACRO:TEST1( _TEST_ )
=BEGIN
=END

MACRO:TEST2( _TEST_ )
=BEGIN
=END

		^%LOAD( B, 0x40 )
		^%LOAD( C, 0x48 )
		^%LOAD( D, 0x50 )
		^%LOAD( E, 0x58 )
		^%LOAD( H, 0x60 )
		^%LOAD( L, 0x68 )

		"LD (HL), %s": GROUP( 0x70, 6 )
		{
			Param[0]:	{	 B      C      D      E      H      L    }
			 Repr[0]:	{	"B"    "C"    "D"    "E"    "H"    "L"   }
			  Cycles:	{	 4      4      4      4      4      4    }

			Logic
			{
				REG_LOAD	*(HL), Param[0];
			}
		}

		"LD (HL), A": 0x77
		{
			  Cycles:	4

			Logic
			{
				REG_LOAD	*(HL), Param[0];
			}
		}

		^%LOAD( A, 0x78 )
	}

	INSTRUCTION_SET	( CB )
	{}

END_LANGUAGE
